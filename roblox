local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

player.CharacterAdded:Connect(function(char)
	character = char
	humanoid = char:WaitForChild("Humanoid")
end)

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MobileMenuGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Menu Toggle Button
local menuButton = Instance.new("TextButton")
menuButton.Size = UDim2.new(0, 100, 0, 40)
menuButton.Position = UDim2.new(0, 10, 0, 10)
menuButton.Text = "Menu"
menuButton.BackgroundColor3 = Color3.fromRGB(50,50,50)
menuButton.TextColor3 = Color3.new(1,1,1)
menuButton.Font = Enum.Font.SourceSansBold
menuButton.TextSize = 20
menuButton.Parent = screenGui

-- Menu Frame (รวมปุ่มทั้งหมด)
local menuFrame = Instance.new("Frame")
menuFrame.Size = UDim2.new(0, 170, 0, 0)
menuFrame.Position = UDim2.new(0, 10, 0, 60)
menuFrame.BackgroundTransparency = 0.3
menuFrame.BackgroundColor3 = Color3.fromRGB(30,30,30)
menuFrame.Parent = screenGui
menuFrame.ClipsDescendants = true

-- ปุ่มทั้งหมด
local buttonInfos = {
	{Text = "Bring Enemies (R)", Color = Color3.fromRGB(0,180,90)},
	{Text = "Heal (F)", Color = Color3.fromRGB(200,100,100)},
	{Text = "Speed (G)", Color = Color3.fromRGB(255,200,50)},
	{Text = "Fly (H)", Color = Color3.fromRGB(50,150,255)},
	{Text = "Auto Farm", Color = Color3.fromRGB(150,50,200)}
}

local buttons = {}
local buttonHeight = 50
local buttonPadding = 10

for i, info in ipairs(buttonInfos) do
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, 150, 0, buttonHeight)
	btn.Position = UDim2.new(0, 10, 0, (i-1)*(buttonHeight+buttonPadding))
	btn.Text = info.Text
	btn.BackgroundColor3 = info.Color
	btn.TextColor3 = Color3.new(1,1,1)
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 20
	btn.Parent = menuFrame
	buttons[i] = btn
end

-- Settings
local offset = Vector3.new(0,0,-5)
local maxDistance = 80
local speedEnabled = false
local flyEnabled = false
local flySpeed = 50
local bodyVelocity
local autoFarmEnabled = false
local autoFarmDistance = 80
local autoFarmDelay = 0.5
local lastAutoFarm = tick()

-- Utility
local function isNPC(model)
	if not model:IsA("Model") then return false end
	if Players:GetPlayerFromCharacter(model) then return false end
	return model:FindFirstChild("Humanoid") and model:FindFirstChild("HumanoidRootPart")
end

local function teleportNearbyNPCs()
	local char = player.Character
	if not char then return end
	local myHRP = char:FindFirstChild("HumanoidRootPart")
	if not myHRP then return end
	for _, obj in ipairs(workspace:GetDescendants()) do
		if obj:IsA("Part") and obj.Name == "HumanoidRootPart" then
			local npc = obj.Parent
			if isNPC(npc) and (obj.Position - myHRP.Position).Magnitude <= maxDistance then
				obj.CFrame = myHRP.CFrame * CFrame.new(offset)
			end
		end
	end
end

local function findNearestSeat()
	local char = player.Character
	if not char then return nil end
	local hrp = char:FindFirstChild("HumanoidRootPart")
	if not hrp then return nil end
	local nearest = nil
	local shortestDist = math.huge
	for _, seat in ipairs(workspace:GetDescendants()) do
		if seat:IsA("Seat") and not seat.Disabled then
			local dist = (seat.Position - hrp.Position).Magnitude
			if dist < shortestDist then
				shortestDist = dist
				nearest = seat
			end
		end
	end
	return nearest
end

local function healPlayer()
	local char = player.Character
	if not char then return end
	local hrp = char:FindFirstChild("HumanoidRootPart")
	local humanoid = char:FindFirstChild("Humanoid")
	if not hrp or not humanoid then return end
	local seat = findNearestSeat()
	if not seat then warn("No usable seat found!") return end
	local originalCFrame = hrp.CFrame
	local wasAnchored = seat.Anchored
	seat.Anchored = true
	hrp.CFrame = seat.CFrame + Vector3.new(0,2,0)

	while true do
		task.wait(1)
		local hpLabel = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("Main")
			and player.PlayerGui.Main:FindFirstChild("HomePage") and player.PlayerGui.Main.HomePage:FindFirstChild("Bottom")
			and player.PlayerGui.Main.HomePage.Bottom:FindFirstChild("Main") and player.PlayerGui.Main.HomePage.Bottom.Main:FindFirstChild("Health")
			and player.PlayerGui.Main.HomePage.Bottom.Main.Health:FindFirstChild("Num") and player.PlayerGui.Main.HomePage.Bottom.Main.Health.Num:FindFirstChild("Health")
		if hpLabel and hpLabel:IsA("TextLabel") then
			local text = hpLabel.Text
			local current, max = string.match(text,"(%d+)%s*/%s*(%d+)")
			if current and max and tonumber(current)==tonumber(max) then break end
		else break end
	end

	humanoid.Sit = false
	task.wait(0.1)
	hrp.CFrame = originalCFrame
	seat.Anchored = wasAnchored
end

-- Infinite Jump
UserInputService.JumpRequest:Connect(function()
	if humanoid then humanoid:ChangeState(Enum.HumanoidStateType.Jumping) end
end)

-- Auto Farm
local function autoFarm()
	if not character or not humanoid then return end
	local hrp = character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	for _, obj in ipairs(workspace:GetDescendants()) do
		if obj:IsA("Part") and obj.Name == "HumanoidRootPart" then
			local npc = obj.Parent
			if isNPC(npc) and (obj.Position - hrp.Position).Magnitude <= autoFarmDistance then
				obj.CFrame = hrp.CFrame * CFrame.new(offset)
				local npcHum = npc:FindFirstChild("Humanoid")
				if npcHum and npcHum.Health > 0 then
					npcHum:TakeDamage(10)
				end
			end
		end
	end
end

-- Loop
RunService.RenderStepped:Connect(function()
	-- Speed
	if speedEnabled and humanoid then
		humanoid.WalkSpeed = 60
	elseif humanoid then
		humanoid.WalkSpeed = 16
	end

	-- Fly
	if flyEnabled and bodyVelocity and humanoid then
		local moveDir = Vector3.new(0,0,0)
		local camera = workspace.CurrentCamera
		if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveDir = moveDir + camera.CFrame.LookVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveDir = moveDir - camera.CFrame.LookVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveDir = moveDir - camera.CFrame.RightVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveDir = moveDir + camera.CFrame.RightVector end
		if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveDir = moveDir + Vector3.new(0,1,0) end
		if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then moveDir = moveDir - Vector3.new(0,1,0) end
		bodyVelocity.Velocity = (moveDir.Magnitude>0) and moveDir.Unit*flySpeed or Vector3.new(0,0,0)
	end

	-- Auto Farm
	if autoFarmEnabled and tick()-lastAutoFarm >= autoFarmDelay then
		autoFarm()
		lastAutoFarm = tick()
	end
end)

-- Toggle functions
local function toggleSpeed()
	speedEnabled = not speedEnabled
	buttons[3].Text = "Speed (G): "..(speedEnabled and "ON" or "OFF")
end

local function toggleFly()
	flyEnabled = not flyEnabled
	buttons[4].Text = "Fly (H): "..(flyEnabled and "ON" or "OFF")
	local hrp = character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	if flyEnabled then
		bodyVelocity = Instance.new("BodyVelocity")
		bodyVelocity.MaxForce = Vector3.new(1e5,1e5,1e5)
		bodyVelocity.Velocity = Vector3.new(0,0,0)
		bodyVelocity.Parent = hrp
	else
		if bodyVelocity then bodyVelocity:Destroy() bodyVelocity=nil end
	end
end

local function toggleAutoFarm()
	autoFarmEnabled = not autoFarmEnabled
	buttons[5].Text = "Auto Farm: "..(autoFarmEnabled and "ON" or "OFF")
end

-- Connect Buttons
buttons[1].MouseButton1Click:Connect(teleportNearbyNPCs)
buttons[2].MouseButton1Click:Connect(healPlayer)
buttons[3].MouseButton1Click:Connect(toggleSpeed)
buttons[4].MouseButton1Click:Connect(toggleFly)
buttons[5].MouseButton1Click:Connect(toggleAutoFarm)

-- Hotkeys
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode==Enum.KeyCode.R then teleportNearbyNPCs()
	elseif input.KeyCode==Enum.KeyCode.F then healPlayer()
	elseif input.KeyCode==Enum.KeyCode.G then toggleSpeed()
	elseif input.KeyCode==Enum.KeyCode.H then toggleFly()
	end
end)

-- Menu Animation
local menuOpen = false
menuButton.MouseButton1Click:Connect(function()
	menuOpen = not menuOpen
	local totalHeight = (#buttons)*(buttonHeight+buttonPadding) + 10
	local tween = TweenService:Create(menuFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size=UDim2.new(0,170,0,menuOpen and totalHeight or 0)})
	tween:Play()
end)
